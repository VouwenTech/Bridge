import PropTypes from "prop-types";
import React from "react";
import { NavLink } from "react-router-dom";

// Chakra imports
import {
  Box,
  Button,
  Flex,
  Grid,
  HStack,
  Icon,
  Link,
  Menu,
  MenuList,
  Stack,
  Text,
  useColorModeValue,
  useColorMode,
  useDisclosure,
  SimpleGrid,
} from "@chakra-ui/react";

// Custom components
import IconBox from "components/icons/IconBox";
import HorizonLogo from "assets/img/sw_logo.svg";
import { SidebarResponsive } from "components/sidebar/Sidebar";
import { SidebarContext } from "contexts/SidebarContext";

// Assets
import { GoChevronDown, GoChevronRight } from "react-icons/go";
import routes from "routes.js";

export default function AuthNavbar(props) {
  const { logo, logoText, secondary, sidebarWidth, ...rest } = props;
  const { colorMode } = useColorMode();
  // Menu States
  const {
    isOpen: isOpenAuth,
    onOpen: onOpenAuth,
    onClose: onCloseAuth, auto
  } = useDisclosure();
  const {
    isOpen: isOpenDashboards,
    onOpen: onOpenDashboards,
    onClose: onCloseDashboards,
  } = useDisclosure();
  const {
    isOpen: isOpenMain,
    onOpen: onOpenMain,
    onClose: onCloseMain,
  } = useDisclosure();
  const {
    isOpen: isOpenNft,
    onOpen: onOpenNft,
    onClose: onCloseNft,
  } = useDisclosure();
  // Menus
  function getLinks(routeName) {
    let foundRoute = routes.filter(function (route) {
      return route.items && route.name === routeName;
    });
    console.log(foundRoute);
    return foundRoute[0].items;
  }
  function getLinksCollapse(routeName) {
    let foundRoute = routes.filter(function (route) {
      return route.items && route.name === routeName;
    });

    let foundLinks = foundRoute[0].items.filter(function (link) {
      return link.collapse === true;
    });

    return foundLinks;
  }
  let authObject = getLinksCollapse("Authentication");
  let mainObject = getLinksCollapse("Main Pages");
  let dashboardsObject = getLinks("Dashboards");
  let nftsObject = getLinks("NFTs");
  let logoColor = useColorModeValue("white", "white");
  // Chakra color mode

  const textColor = useColorModeValue("navy.700", "white");
  let menuBg = useColorModeValue("white", "navy.900");
  let mainText = "#fff";
  let navbarBg = "none";
  let navbarShadow = "initial";
  let bgButton = "white";
  let colorButton = "brand.500";
  let navbarPosition = "absolute";

  let brand = (
    <Link
      href={`${process.env.PUBLIC_URL}/#/`}
      target='_blank'
      display='flex'
      lineHeight='100%'
      fontWeight='bold'
      justifyContent='center'
      alignItems='center'
      color={mainText}>
      <Stack direction='row' spacing='12px' align='center' justify='center'>
      <svg width="200" height="100" viewBox="0 0 2751 522" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M261 16.3125H342.562V97.875H261V16.3125Z" fill="black" />
          <path fill-rule="evenodd" clip-rule="evenodd" d="M261 179.438V97.875H130.5C62.9314 97.875 8.15625 152.65 8.15625 220.219C8.15625 287.787 62.9314 342.562 130.5 342.562H261L261 424.125L179.438 424.125V505.688H261L261 424.125L391.5 424.125C459.069 424.125 513.844 369.35 513.844 301.781C513.844 234.213 459.069 179.438 391.5 179.438H261ZM261 261H130.5C107.977 261 89.7188 242.742 89.7188 220.219C89.7188 197.696 107.977 179.438 130.5 179.438H261V261ZM261 261V342.562H391.5C414.023 342.562 432.281 324.304 432.281 301.781C432.281 279.258 414.023 261 391.5 261L261 261Z" fill="black" />
          <path d="M2577.91 462.716C2568.92 462.716 2560.35 462.006 2552.2 460.585C2544.06 459.259 2536.91 457.413 2530.75 455.045L2547.8 399.361C2554.24 401.634 2560.11 403.102 2565.41 403.765C2570.81 404.428 2575.4 404.049 2579.19 402.629C2583.07 401.208 2585.87 398.509 2587.57 394.532L2589.28 390.554L2512.57 162.705H2594.39L2629.62 313.847H2631.89L2667.69 162.705H2750.08L2670.53 399.077C2666.55 411.104 2660.78 421.9 2653.2 431.465C2645.72 441.124 2635.87 448.748 2623.65 454.335C2611.44 459.922 2596.19 462.716 2577.91 462.716Z" fill="black" />
          <path d="M2362.46 384.307C2348.53 384.307 2336.22 382.034 2325.52 377.489C2314.92 372.848 2306.58 365.841 2300.52 356.465C2294.46 347.09 2291.43 335.158 2291.43 320.669C2291.43 308.736 2293.47 298.556 2297.54 290.128C2301.61 281.605 2307.29 274.644 2314.58 269.246C2321.88 263.848 2330.35 259.729 2340.01 256.888C2349.77 254.047 2360.28 252.2 2371.55 251.348C2383.76 250.401 2393.56 249.264 2400.95 247.939C2408.43 246.518 2413.83 244.577 2417.14 242.115C2420.46 239.558 2422.12 236.196 2422.12 232.029V231.461C2422.12 225.779 2419.94 221.422 2415.58 218.392C2411.23 215.362 2405.64 213.846 2398.82 213.846C2391.34 213.846 2385.23 215.504 2380.5 218.818C2375.86 222.038 2373.06 227.01 2372.11 233.734H2299.95C2300.9 220.475 2305.11 208.259 2312.6 197.084C2320.17 185.815 2331.2 176.819 2345.69 170.095C2360.18 163.276 2378.27 159.867 2399.96 159.867C2415.58 159.867 2429.6 161.714 2442 165.407C2454.41 169.006 2464.97 174.072 2473.68 180.607C2482.39 187.046 2489.02 194.622 2493.57 203.335C2498.21 211.952 2500.53 221.328 2500.53 231.461V380.898H2427.23V350.215H2425.53C2421.17 358.359 2415.87 364.941 2409.62 369.96C2403.46 374.979 2396.41 378.625 2388.45 380.898C2380.59 383.171 2371.93 384.307 2362.46 384.307ZM2388.02 334.874C2393.99 334.874 2399.58 333.642 2404.79 331.18C2410.09 328.718 2414.4 325.167 2417.71 320.526C2421.03 315.886 2422.68 310.251 2422.68 303.622V285.44C2420.6 286.292 2418.38 287.097 2416.01 287.855C2413.74 288.612 2411.27 289.323 2408.62 289.986C2406.06 290.648 2403.32 291.264 2400.38 291.832C2397.54 292.4 2394.56 292.921 2391.43 293.395C2385.37 294.342 2380.4 295.904 2376.52 298.082C2372.73 300.166 2369.89 302.77 2367.99 305.895C2366.2 308.926 2365.3 312.335 2365.3 316.123C2365.3 322.184 2367.43 326.824 2371.69 330.044C2375.95 333.264 2381.4 334.874 2388.02 334.874Z" fill="black" />
          <path d="M1962.27 380.9L1876.47 89.9805H1964.54L2004.31 268.964H2006.59L2053.75 89.9805H2123.07L2170.23 269.533H2172.5L2212.28 89.9805H2300.35L2214.55 380.9H2138.98L2089.54 218.394H2087.27L2037.84 380.9H1962.27Z" fill="black" />
          <path d="M1771.04 384.875C1747.75 384.875 1727.67 380.425 1710.81 371.523C1694.05 362.526 1681.13 349.647 1672.03 332.885C1663.04 316.028 1658.54 295.857 1658.54 272.371C1658.54 249.833 1663.08 230.135 1672.18 213.278C1681.27 196.422 1694.1 183.306 1710.67 173.93C1727.24 164.555 1746.8 159.867 1769.34 159.867C1785.82 159.867 1800.73 162.424 1814.08 167.538C1827.44 172.652 1838.85 180.086 1848.32 189.84C1857.79 199.499 1865.08 211.242 1870.19 225.068C1875.31 238.895 1877.87 254.473 1877.87 271.803V289.986H1682.97V246.802H1805.7C1805.61 240.552 1804 235.059 1800.87 230.324C1797.84 225.495 1793.72 221.754 1788.52 219.102C1783.4 216.356 1777.58 214.983 1771.04 214.983C1764.7 214.983 1758.87 216.356 1753.57 219.102C1748.27 221.754 1744.01 225.447 1740.79 230.182C1737.66 234.917 1736 240.457 1735.81 246.802V293.395C1735.81 300.403 1737.28 306.653 1740.22 312.145C1743.15 317.638 1747.37 321.947 1752.86 325.072C1758.35 328.197 1764.98 329.76 1772.75 329.76C1778.15 329.76 1783.07 329.002 1787.52 327.487C1792.07 325.972 1795.95 323.794 1799.17 320.953C1802.39 318.017 1804.76 314.513 1806.27 310.441H1877.87C1875.4 325.593 1869.58 338.756 1860.39 349.931C1851.21 361.011 1839.04 369.629 1823.89 375.784C1808.83 381.845 1791.21 384.875 1771.04 384.875Z" fill="black" />
          <path d="M1503.33 329.194L1503.9 236.009H1514.13L1566.97 162.71H1655.04L1566.4 276.919H1544.24L1503.33 329.194ZM1432.88 380.9V89.9805H1511.29V380.9H1432.88ZM1567.54 380.9L1517.54 294.533L1568.68 238.85L1657.32 380.9H1567.54Z" fill="black" />
          <path d="M1257.34 384.307C1243.42 384.307 1231.11 382.034 1220.4 377.489C1209.8 372.848 1201.46 365.841 1195.4 356.465C1189.34 347.09 1186.31 335.158 1186.31 320.669C1186.31 308.736 1188.35 298.556 1192.42 290.128C1196.49 281.605 1202.17 274.644 1209.47 269.246C1216.76 263.848 1225.23 259.729 1234.89 256.888C1244.65 254.047 1255.16 252.2 1266.43 251.348C1278.65 250.401 1288.45 249.264 1295.83 247.939C1303.31 246.518 1308.71 244.577 1312.03 242.115C1315.34 239.558 1317 236.196 1317 232.029V231.461C1317 225.779 1314.82 221.422 1310.46 218.392C1306.11 215.362 1300.52 213.846 1293.7 213.846C1286.22 213.846 1280.11 215.504 1275.38 218.818C1270.74 222.038 1267.94 227.01 1267 233.734H1194.84C1195.78 220.475 1200 208.259 1207.48 197.084C1215.05 185.815 1226.09 176.819 1240.58 170.095C1255.07 163.276 1273.15 159.867 1294.84 159.867C1310.46 159.867 1324.48 161.714 1336.89 165.407C1349.29 169.006 1359.85 174.072 1368.56 180.607C1377.28 187.046 1383.9 194.622 1388.45 203.335C1393.09 211.952 1395.41 221.328 1395.41 231.461V380.898H1322.11V350.215H1320.41C1316.05 358.359 1310.75 364.941 1304.5 369.96C1298.34 374.979 1291.29 378.625 1283.33 380.898C1275.47 383.171 1266.81 384.307 1257.34 384.307ZM1282.91 334.874C1288.87 334.874 1294.46 333.642 1299.67 331.18C1304.97 328.718 1309.28 325.167 1312.6 320.526C1315.91 315.886 1317.57 310.251 1317.57 303.622V285.44C1315.48 286.292 1313.26 287.097 1310.89 287.855C1308.62 288.612 1306.16 289.323 1303.5 289.986C1300.95 290.648 1298.2 291.264 1295.27 291.832C1292.42 292.4 1289.44 292.921 1286.32 293.395C1280.26 294.342 1275.28 295.904 1271.4 298.082C1267.61 300.166 1264.77 302.77 1262.88 305.895C1261.08 308.926 1260.18 312.335 1260.18 316.123C1260.18 322.184 1262.31 326.824 1266.57 330.044C1270.83 333.264 1276.28 334.874 1282.91 334.874Z" fill="black" />
          <path d="M1016.35 258.166V380.898H937.938V162.708H1012.37V204.187H1014.64C1019.38 190.361 1027.71 179.518 1039.65 171.657C1051.67 163.797 1065.69 159.867 1081.69 159.867C1097.13 159.867 1110.53 163.418 1121.89 170.521C1133.35 177.529 1142.21 187.188 1148.46 199.499C1154.8 211.81 1157.93 225.873 1157.83 241.688V380.898H1079.42V258.166C1079.51 247.37 1076.77 238.895 1071.18 232.739C1065.69 226.584 1058.02 223.506 1048.17 223.506C1041.73 223.506 1036.09 224.926 1031.26 227.767C1026.53 230.514 1022.88 234.491 1020.33 239.7C1017.77 244.813 1016.44 250.969 1016.35 258.166Z" fill="black" />
          <path d="M827.211 180.89C826.453 171.42 822.902 164.033 816.557 158.73C810.307 153.427 800.789 150.775 788.005 150.775C779.86 150.775 773.184 151.769 767.975 153.758C762.862 155.652 759.074 158.256 756.611 161.571C754.149 164.885 752.871 168.673 752.776 172.935C752.587 176.439 753.202 179.611 754.623 182.452C756.138 185.199 758.505 187.708 761.725 189.981C764.945 192.159 769.064 194.148 774.084 195.947C779.103 197.747 785.069 199.356 791.982 200.777L815.847 205.891C831.946 209.3 845.724 213.798 857.183 219.386C868.642 224.973 878.017 231.555 885.309 239.131C892.601 246.612 897.952 255.04 901.361 264.416C904.865 273.791 906.664 284.019 906.759 295.099C906.664 314.228 901.882 330.422 892.412 343.68C882.942 356.938 869.4 367.024 851.785 373.937C834.266 380.85 813.195 384.306 788.573 384.306C763.288 384.306 741.223 380.566 722.377 373.084C703.626 365.603 689.043 354.097 678.626 338.566C668.303 322.94 663.095 302.959 663 278.621H738.003C738.476 287.523 740.702 295.004 744.679 301.065C748.657 307.126 754.244 311.718 761.441 314.844C768.733 317.969 777.398 319.531 787.436 319.531C795.865 319.531 802.92 318.49 808.602 316.406C814.284 314.323 818.593 311.434 821.529 307.741C824.464 304.048 825.979 299.834 826.074 295.099C825.979 290.648 824.512 286.765 821.671 283.45C818.924 280.041 814.379 277.011 808.034 274.359C801.689 271.613 793.118 269.056 782.323 266.688L753.344 260.438C727.586 254.851 707.272 245.523 692.404 232.454C677.631 219.291 670.292 201.345 670.387 178.617C670.292 160.15 675.216 144.004 685.16 130.178C695.198 116.257 709.072 105.414 726.781 97.6482C744.584 89.8827 764.992 86 788.005 86C811.49 86 831.804 89.9301 848.944 97.7902C866.085 105.65 879.296 116.73 888.576 131.03C897.952 145.235 902.687 161.855 902.782 180.89H827.211Z" fill="black" />
        </svg>
      </Stack>
      <Text fontsize='sm' mt='3px'>
        {logoText}
      </Text>
    </Link>
  );
  if (props.secondary === true) {
    brand = (
      <Link
        minW='175px'
        href={`${process.env.PUBLIC_URL}/#/`}
        target='_blank'
        display='flex'
        lineHeight='100%'
        fontWeight='bold'
        justifyContent='center'
        alignItems='center'
        color={mainText}>
        <svg width="200" height="100" viewBox="0 0 2751 522" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M261 16.3125H342.562V97.875H261V16.3125Z" fill="black" />
          <path fill-rule="evenodd" clip-rule="evenodd" d="M261 179.438V97.875H130.5C62.9314 97.875 8.15625 152.65 8.15625 220.219C8.15625 287.787 62.9314 342.562 130.5 342.562H261L261 424.125L179.438 424.125V505.688H261L261 424.125L391.5 424.125C459.069 424.125 513.844 369.35 513.844 301.781C513.844 234.213 459.069 179.438 391.5 179.438H261ZM261 261H130.5C107.977 261 89.7188 242.742 89.7188 220.219C89.7188 197.696 107.977 179.438 130.5 179.438H261V261ZM261 261V342.562H391.5C414.023 342.562 432.281 324.304 432.281 301.781C432.281 279.258 414.023 261 391.5 261L261 261Z" fill="black" />
          <path d="M2577.91 462.716C2568.92 462.716 2560.35 462.006 2552.2 460.585C2544.06 459.259 2536.91 457.413 2530.75 455.045L2547.8 399.361C2554.24 401.634 2560.11 403.102 2565.41 403.765C2570.81 404.428 2575.4 404.049 2579.19 402.629C2583.07 401.208 2585.87 398.509 2587.57 394.532L2589.28 390.554L2512.57 162.705H2594.39L2629.62 313.847H2631.89L2667.69 162.705H2750.08L2670.53 399.077C2666.55 411.104 2660.78 421.9 2653.2 431.465C2645.72 441.124 2635.87 448.748 2623.65 454.335C2611.44 459.922 2596.19 462.716 2577.91 462.716Z" fill="black" />
          <path d="M2362.46 384.307C2348.53 384.307 2336.22 382.034 2325.52 377.489C2314.92 372.848 2306.58 365.841 2300.52 356.465C2294.46 347.09 2291.43 335.158 2291.43 320.669C2291.43 308.736 2293.47 298.556 2297.54 290.128C2301.61 281.605 2307.29 274.644 2314.58 269.246C2321.88 263.848 2330.35 259.729 2340.01 256.888C2349.77 254.047 2360.28 252.2 2371.55 251.348C2383.76 250.401 2393.56 249.264 2400.95 247.939C2408.43 246.518 2413.83 244.577 2417.14 242.115C2420.46 239.558 2422.12 236.196 2422.12 232.029V231.461C2422.12 225.779 2419.94 221.422 2415.58 218.392C2411.23 215.362 2405.64 213.846 2398.82 213.846C2391.34 213.846 2385.23 215.504 2380.5 218.818C2375.86 222.038 2373.06 227.01 2372.11 233.734H2299.95C2300.9 220.475 2305.11 208.259 2312.6 197.084C2320.17 185.815 2331.2 176.819 2345.69 170.095C2360.18 163.276 2378.27 159.867 2399.96 159.867C2415.58 159.867 2429.6 161.714 2442 165.407C2454.41 169.006 2464.97 174.072 2473.68 180.607C2482.39 187.046 2489.02 194.622 2493.57 203.335C2498.21 211.952 2500.53 221.328 2500.53 231.461V380.898H2427.23V350.215H2425.53C2421.17 358.359 2415.87 364.941 2409.62 369.96C2403.46 374.979 2396.41 378.625 2388.45 380.898C2380.59 383.171 2371.93 384.307 2362.46 384.307ZM2388.02 334.874C2393.99 334.874 2399.58 333.642 2404.79 331.18C2410.09 328.718 2414.4 325.167 2417.71 320.526C2421.03 315.886 2422.68 310.251 2422.68 303.622V285.44C2420.6 286.292 2418.38 287.097 2416.01 287.855C2413.74 288.612 2411.27 289.323 2408.62 289.986C2406.06 290.648 2403.32 291.264 2400.38 291.832C2397.54 292.4 2394.56 292.921 2391.43 293.395C2385.37 294.342 2380.4 295.904 2376.52 298.082C2372.73 300.166 2369.89 302.77 2367.99 305.895C2366.2 308.926 2365.3 312.335 2365.3 316.123C2365.3 322.184 2367.43 326.824 2371.69 330.044C2375.95 333.264 2381.4 334.874 2388.02 334.874Z" fill="black" />
          <path d="M1962.27 380.9L1876.47 89.9805H1964.54L2004.31 268.964H2006.59L2053.75 89.9805H2123.07L2170.23 269.533H2172.5L2212.28 89.9805H2300.35L2214.55 380.9H2138.98L2089.54 218.394H2087.27L2037.84 380.9H1962.27Z" fill="black" />
          <path d="M1771.04 384.875C1747.75 384.875 1727.67 380.425 1710.81 371.523C1694.05 362.526 1681.13 349.647 1672.03 332.885C1663.04 316.028 1658.54 295.857 1658.54 272.371C1658.54 249.833 1663.08 230.135 1672.18 213.278C1681.27 196.422 1694.1 183.306 1710.67 173.93C1727.24 164.555 1746.8 159.867 1769.34 159.867C1785.82 159.867 1800.73 162.424 1814.08 167.538C1827.44 172.652 1838.85 180.086 1848.32 189.84C1857.79 199.499 1865.08 211.242 1870.19 225.068C1875.31 238.895 1877.87 254.473 1877.87 271.803V289.986H1682.97V246.802H1805.7C1805.61 240.552 1804 235.059 1800.87 230.324C1797.84 225.495 1793.72 221.754 1788.52 219.102C1783.4 216.356 1777.58 214.983 1771.04 214.983C1764.7 214.983 1758.87 216.356 1753.57 219.102C1748.27 221.754 1744.01 225.447 1740.79 230.182C1737.66 234.917 1736 240.457 1735.81 246.802V293.395C1735.81 300.403 1737.28 306.653 1740.22 312.145C1743.15 317.638 1747.37 321.947 1752.86 325.072C1758.35 328.197 1764.98 329.76 1772.75 329.76C1778.15 329.76 1783.07 329.002 1787.52 327.487C1792.07 325.972 1795.95 323.794 1799.17 320.953C1802.39 318.017 1804.76 314.513 1806.27 310.441H1877.87C1875.4 325.593 1869.58 338.756 1860.39 349.931C1851.21 361.011 1839.04 369.629 1823.89 375.784C1808.83 381.845 1791.21 384.875 1771.04 384.875Z" fill="black" />
          <path d="M1503.33 329.194L1503.9 236.009H1514.13L1566.97 162.71H1655.04L1566.4 276.919H1544.24L1503.33 329.194ZM1432.88 380.9V89.9805H1511.29V380.9H1432.88ZM1567.54 380.9L1517.54 294.533L1568.68 238.85L1657.32 380.9H1567.54Z" fill="black" />
          <path d="M1257.34 384.307C1243.42 384.307 1231.11 382.034 1220.4 377.489C1209.8 372.848 1201.46 365.841 1195.4 356.465C1189.34 347.09 1186.31 335.158 1186.31 320.669C1186.31 308.736 1188.35 298.556 1192.42 290.128C1196.49 281.605 1202.17 274.644 1209.47 269.246C1216.76 263.848 1225.23 259.729 1234.89 256.888C1244.65 254.047 1255.16 252.2 1266.43 251.348C1278.65 250.401 1288.45 249.264 1295.83 247.939C1303.31 246.518 1308.71 244.577 1312.03 242.115C1315.34 239.558 1317 236.196 1317 232.029V231.461C1317 225.779 1314.82 221.422 1310.46 218.392C1306.11 215.362 1300.52 213.846 1293.7 213.846C1286.22 213.846 1280.11 215.504 1275.38 218.818C1270.74 222.038 1267.94 227.01 1267 233.734H1194.84C1195.78 220.475 1200 208.259 1207.48 197.084C1215.05 185.815 1226.09 176.819 1240.58 170.095C1255.07 163.276 1273.15 159.867 1294.84 159.867C1310.46 159.867 1324.48 161.714 1336.89 165.407C1349.29 169.006 1359.85 174.072 1368.56 180.607C1377.28 187.046 1383.9 194.622 1388.45 203.335C1393.09 211.952 1395.41 221.328 1395.41 231.461V380.898H1322.11V350.215H1320.41C1316.05 358.359 1310.75 364.941 1304.5 369.96C1298.34 374.979 1291.29 378.625 1283.33 380.898C1275.47 383.171 1266.81 384.307 1257.34 384.307ZM1282.91 334.874C1288.87 334.874 1294.46 333.642 1299.67 331.18C1304.97 328.718 1309.28 325.167 1312.6 320.526C1315.91 315.886 1317.57 310.251 1317.57 303.622V285.44C1315.48 286.292 1313.26 287.097 1310.89 287.855C1308.62 288.612 1306.16 289.323 1303.5 289.986C1300.95 290.648 1298.2 291.264 1295.27 291.832C1292.42 292.4 1289.44 292.921 1286.32 293.395C1280.26 294.342 1275.28 295.904 1271.4 298.082C1267.61 300.166 1264.77 302.77 1262.88 305.895C1261.08 308.926 1260.18 312.335 1260.18 316.123C1260.18 322.184 1262.31 326.824 1266.57 330.044C1270.83 333.264 1276.28 334.874 1282.91 334.874Z" fill="black" />
          <path d="M1016.35 258.166V380.898H937.938V162.708H1012.37V204.187H1014.64C1019.38 190.361 1027.71 179.518 1039.65 171.657C1051.67 163.797 1065.69 159.867 1081.69 159.867C1097.13 159.867 1110.53 163.418 1121.89 170.521C1133.35 177.529 1142.21 187.188 1148.46 199.499C1154.8 211.81 1157.93 225.873 1157.83 241.688V380.898H1079.42V258.166C1079.51 247.37 1076.77 238.895 1071.18 232.739C1065.69 226.584 1058.02 223.506 1048.17 223.506C1041.73 223.506 1036.09 224.926 1031.26 227.767C1026.53 230.514 1022.88 234.491 1020.33 239.7C1017.77 244.813 1016.44 250.969 1016.35 258.166Z" fill="black" />
          <path d="M827.211 180.89C826.453 171.42 822.902 164.033 816.557 158.73C810.307 153.427 800.789 150.775 788.005 150.775C779.86 150.775 773.184 151.769 767.975 153.758C762.862 155.652 759.074 158.256 756.611 161.571C754.149 164.885 752.871 168.673 752.776 172.935C752.587 176.439 753.202 179.611 754.623 182.452C756.138 185.199 758.505 187.708 761.725 189.981C764.945 192.159 769.064 194.148 774.084 195.947C779.103 197.747 785.069 199.356 791.982 200.777L815.847 205.891C831.946 209.3 845.724 213.798 857.183 219.386C868.642 224.973 878.017 231.555 885.309 239.131C892.601 246.612 897.952 255.04 901.361 264.416C904.865 273.791 906.664 284.019 906.759 295.099C906.664 314.228 901.882 330.422 892.412 343.68C882.942 356.938 869.4 367.024 851.785 373.937C834.266 380.85 813.195 384.306 788.573 384.306C763.288 384.306 741.223 380.566 722.377 373.084C703.626 365.603 689.043 354.097 678.626 338.566C668.303 322.94 663.095 302.959 663 278.621H738.003C738.476 287.523 740.702 295.004 744.679 301.065C748.657 307.126 754.244 311.718 761.441 314.844C768.733 317.969 777.398 319.531 787.436 319.531C795.865 319.531 802.92 318.49 808.602 316.406C814.284 314.323 818.593 311.434 821.529 307.741C824.464 304.048 825.979 299.834 826.074 295.099C825.979 290.648 824.512 286.765 821.671 283.45C818.924 280.041 814.379 277.011 808.034 274.359C801.689 271.613 793.118 269.056 782.323 266.688L753.344 260.438C727.586 254.851 707.272 245.523 692.404 232.454C677.631 219.291 670.292 201.345 670.387 178.617C670.292 160.15 675.216 144.004 685.16 130.178C695.198 116.257 709.072 105.414 726.781 97.6482C744.584 89.8827 764.992 86 788.005 86C811.49 86 831.804 89.9301 848.944 97.7902C866.085 105.65 879.296 116.73 888.576 131.03C897.952 145.235 902.687 161.855 902.782 180.89H827.211Z" fill="black" />
        </svg>
      </Link>
    );
    // mainText = useColorModeValue("gray.700", "gray.200");
    // navbarBg = useColorModeValue("white", "navy.800");
    // navbarShadow = useColorModeValue(
    //   "0px 7px 23px rgba(0, 0, 0, 0.05)",
    //   "none"
    // );
    // bgButton = useColorModeValue("gray.700", "white");
    // colorButton = useColorModeValue("white", "gray.700");
    // navbarPosition = "fixed";
  }
  const createNftsLinks = (routes) => {
    return routes.map((link, key) => {
      return (
        <NavLink
          key={key}
          to={link.layout + link.path}
          style={{ maxWidth: "max-content", marginLeft: "40px" }}>
          <Text color='gray.400' fontSize='sm' fontWeight='normal'>
            {link.name}
          </Text>
        </NavLink>
      );
    });
  };
  const createDashboardsLinks = (routes) => {
    return routes.map((link, key) => {
      return (
        <NavLink
          key={key}
          to={link.layout + link.path}
          style={{ maxWidth: "max-content", marginLeft: "40px" }}>
          <Text color='gray.400' fontSize='sm' fontWeight='normal'>
            {link.name}
          </Text>
        </NavLink>
      );
    });
  };
  const createMainLinks = (routes) => {
    return routes.map((link, key) => {
      if (link.collapse === true) {
        return (
          <Stack key={key} direction='column' maxW='max-content'>
            <Stack
              direction='row'
              spacing='0px'
              align='center'
              cursor='default'>
              <IconBox bg='brand.500' h='30px' w='30px' me='10px'>
                {link.icon}
              </IconBox>
              <Text fontWeight='bold' fontSize='md' me='auto' color={textColor}>
                {link.name}
              </Text>
              <Icon
                as={GoChevronRight}
                color={mainText}
                w='14px'
                h='14px'
                fontWeight='2000'
              />
            </Stack>
            <Stack direction='column' bg={menuBg}>
              {createMainLinks(link.items)}
            </Stack>
          </Stack>
        );
      } else {
        return (
          <NavLink
            key={key}
            to={link.layout + link.path}
            style={{ maxWidth: "max-content", marginLeft: "40px" }}>
            <Text color='gray.400' fontSize='sm' fontWeight='normal'>
              {link.name}
            </Text>
          </NavLink>
        );
      }
    });
  };
  const createAuthLinks = (routes) => {
    return routes.map((link, key) => {
      if (link.collapse === true) {
        return (
          <Stack key={key} direction='column' my='auto' maxW='max-content'>
            <Stack
              direction='row'
              spacing='0px'
              align='center'
              cursor='default'
              w='max-content'>
              <IconBox bg='brand.500' h='30px' w='30px' me='10px'>
                {link.icon}
              </IconBox>
              <Text fontWeight='bold' fontSize='md' me='auto' color={textColor}>
                {link.name}
              </Text>
              <Icon
                as={GoChevronRight}
                color={mainText}
                w='14px'
                h='14px'
                fontWeight='2000'
              />
            </Stack>
            <Stack direction='column' bg={menuBg}>
              {createAuthLinks(link.items)}
            </Stack>
          </Stack>
        );
      } else {
        return (
          <NavLink
            key={key}
            to={link.layout + link.path}
            style={{ maxWidth: "max-content", marginLeft: "40px" }}>
            <Text color='gray.400' fontSize='sm' fontWeight='normal'>
              {link.name}
            </Text>
          </NavLink>
        );
      }
    });
  };
  const linksAuth = (
    <HStack display={{ sm: "none", lg: "flex" }} spacing='12px'>
      <Stack
        direction='row'
        spacing='4px'
        align='center'
        color='#fff'
        fontWeight='bold'
        onMouseEnter={onOpenDashboards}
        onMouseLeave={onCloseDashboards}
        cursor='pointer'
        position='relative'>
        <Text fontSize='sm' color={mainText}>
          Dashboards
        </Text>
        <Box>
          <Icon
            mt='8px'
            as={GoChevronDown}
            color={mainText}
            w='14px'
            h='14px'
            fontWeight='2000'
          />
        </Box>
        <Menu isOpen={isOpenDashboards}>
          <MenuList
            bg={menuBg}
            p='22px'
            cursor='default'
            borderRadius='15px'
            position='absolute'
            top='30px'
            left='-10px'>
            <Flex flexWrap='wrap' w='300px' gap='16px'>
              {createDashboardsLinks(dashboardsObject)}
            </Flex>
          </MenuList>
        </Menu>
      </Stack>
      <Stack
        direction='row'
        spacing='4px'
        align='center'
        color='#fff'
        fontWeight='bold'
        onMouseEnter={onOpenAuth}
        onMouseLeave={onCloseAuth}
        cursor='pointer'
        position='relative'>
        <Text fontSize='sm' color={mainText}>
          Authentications
        </Text>
        <Box>
          <Icon
            mt='8px'
            as={GoChevronDown}
            color={mainText}
            w='14px'
            h='14px'
            fontWeight='2000'
          />
        </Box>
        <Menu isOpen={isOpenAuth}>
          <MenuList
            bg={menuBg}
            p='22px'
            cursor='default'
            borderRadius='15px'
            position='absolute'
            top='30px'
            left='-10px'>
            <Flex>
              <SimpleGrid columns='3' gap='10px' minW='500px' me='20px'>
                {createAuthLinks(authObject)}
              </SimpleGrid>
              {/* <Flex
                bg='red'
                direction='column'
                justify='center'
                align='center'
                w='stretch'
                minH='230px'
                borderRadius='15px'>
                <IconBox
                  bg='white'
                  color='white'
                  borderRadius='50%'
                  h='50px'
                  w='50px'
                  mb='12px'>
                  <Icon as={AiFillStar} w='25px' h='25px' color='blue.500' />
                </IconBox>
                <Text
                  fontSize='xl'
                  fontWeight='bold'
                  color='#fff'
                  maxW='80%'
                  textAlign='center'>
                  Explore our utilities pages
                </Text>
              </Flex> */}
            </Flex>
          </MenuList>
        </Menu>
      </Stack>
      <Stack
        direction='row'
        spacing='4px'
        align='center'
        color='#fff'
        fontWeight='bold'
        onMouseEnter={onOpenMain}
        onMouseLeave={onCloseMain}
        cursor='pointer'
        position='relative'>
        <Text fontSize='sm' color={mainText}>
          Main Pages
        </Text>
        <Box>
          <Icon
            mt='8px'
            as={GoChevronDown}
            color={mainText}
            w='14px'
            h='14px'
            fontWeight='2000'
          />
        </Box>
        <Menu isOpen={isOpenMain}>
          <MenuList
            bg={menuBg}
            p='22px'
            cursor='default'
            borderRadius='15px'
            position='absolute'
            top='30px'
            left='-10px'>
            <Flex flexWrap='wrap' align='start' w='500px' gap='16px'>
              {createMainLinks(mainObject)}
            </Flex>
          </MenuList>
        </Menu>
      </Stack>
      <Stack
        direction='row'
        spacing='4px'
        align='center'
        color='#fff'
        fontWeight='bold'
        onMouseEnter={onOpenNft}
        onMouseLeave={onCloseNft}
        cursor='pointer'
        position='relative'>
        <Text fontSize='sm' color={mainText}>
          NFTs
        </Text>
        <Box>
          <Icon
            mt='8px'
            as={GoChevronDown}
            color={mainText}
            w='14px'
            h='14px'
            fontWeight='2000'
          />
        </Box>
        <Menu isOpen={isOpenNft}>
          <MenuList
            bg={menuBg}
            p='22px'
            minW='350px'
            cursor='default'
            borderRadius='15px'
            position='absolute'
            top='30px'
            left='-10px'>
            <Grid templateColumns='repeat(2, 1fr)' gap='16px'>
              {createNftsLinks(nftsObject)}
            </Grid>
          </MenuList>
        </Menu>
      </Stack>
    </HStack>
  );

  return (
    <SidebarContext.Provider value={{ sidebarWidth }}>
      <Flex
        position={navbarPosition}
        top='16px'
        left='50%'
        transform='translate(-50%, 0px)'
        background={navbarBg}
        boxShadow={navbarShadow}
        borderRadius='15px'
        px='16px'
        py='22px'
        mx='auto'
        width='1044px'
        maxW='90%'
        alignItems='center'
        zIndex='3'>
        <Flex w='100%' justifyContent={{ sm: "start", lg: "space-between" }}>
          {brand}
          <Box
            ms={{ base: "auto", lg: "0px" }}
            display={{ base: "flex", lg: "none" }}
            justifyContent='center'
            alignItems='center'>
            <SidebarResponsive
              logo={
                <Stack
                  direction='row'
                  spacing='12px'
                  align='center'
                  justify='center'>
                  <Box
                    w='1px'
                    h='20px'
                    bg={colorMode === "dark" ? "white" : "gray.700"}
                  />
                </Stack>
              }
              logoText={props.logoText}
              secondary={props.secondary}
              routes={routes}
              {...rest}
            />
          </Box>
          {linksAuth}
          <Link href='https://www.horizon-ui.com/pro'>
            <Button
              bg={bgButton}
              color={colorButton}
              fontSize='xs'
              variant='no-effects'
              borderRadius='50px'
              px='45px'
              display={{
                sm: "none",
                lg: "flex",
              }}>
              Buy Now
            </Button>
          </Link>
        </Flex>
      </Flex>
    </SidebarContext.Provider>
  );
}

AuthNavbar.propTypes = {
  color: PropTypes.oneOf(["primary", "info", "success", "warning", "danger"]),
  brandText: PropTypes.string,
};
